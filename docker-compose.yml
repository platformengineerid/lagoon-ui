version: '3.2'

x-lagoon-project:
  # Lagoon project name (leave `&lagoon-project` when you edit this)
  &lagoon-project lagoon-ui

x-environment: &default-environment
  LAGOON_PROJECT: *lagoon-project
  # Route that should be used locally, if you are using pygmy, this route *must* end with .docker.amazee.io
  LAGOON_ROUTE: &default-url http://lagoon-ui.docker.amazee.io
  # Uncomment if you like to have the system behave like in production
  #LAGOON_ENVIRONMENT_TYPE: production
  GRAPHQL_API: "${GRAPHQL_API:-http://localhost:3000/graphql}"
  KEYCLOAK_API: "${KEYCLOAK_API:-http://localhost:8088/auth}"

services:
  ui:
    build:
      context: .
      dockerfile: .lagoon/ui.Dockerfile
    labels:
      lagoon.type: node
    depends_on:
      - 'api-db'
      - 'api'
    # command: yarn run start
    command: yarn run dev
    volumes:
      - ./services/ui/src:/app/src
      - ./services/ui/.env.defaults:/app/.env.defaults
      - ./services/ui/.env.schema:/app/.env.schema
      - ./services/ui/package.json:/app/package.json
      - ./services/ui/api-db-seeding:/app/api-db-seeding
    ports:
      - '8888:3000'
      - '3003:3003'
    networks:
      - amazeeio-network
      - default
    environment:
      <<: *default-environment
  api-db:
    # image: uselagoon/api-db
    image: uselagoon/api-db
    labels:
      lagoon.type: none
    ports:
      - '3306:3306'
    networks:
      - amazeeio-network
      - default
    environment:
      <<: *default-environment
  api:
    build:
      context: .
      dockerfile: .lagoon/api.Dockerfile
    depends_on:
      - api-db
      - keycloak
    labels:
      lagoon.type: none
    ports:
      - '3000:3000'
    volumes:
      - ./services/api:/services/api
      - ./services/mock-data:/mock-data
    networks:
      - amazeeio-network
      - default
    environment:
      <<: *default-environment
      S3_INSIGHTS_BUCKET: "lagoon-files"
  api-redis:
    image: uselagoon/api-redis
    labels:
      lagoon.type: none
    environment:
      <<: *default-environment
  keycloak:
    image: testlagoon/keycloak
    # build:
    #   context: .
    #   dockerfile: .lagoon/keycloak.Dockerfile
    # user: '111111111'
    depends_on:
      - keycloak-db
    labels:
      lagoon.type: none
    # volumes:
    #   - .lagoon/start.sh:/opt/jboss/tools/start.sh
    ports:
      - '8088:8080'
    environment:
      <<: *default-environment
  keycloak-db:
    image: uselagoon/keycloak-db
    labels:
      lagoon.type: none
    ports:
      - '3336:3306'
    environment:
      <<: *default-environment
  local-api-data-watcher-pusher:
    image: uselagoon/local-api-data-watcher-pusher
    labels:
      lagoon.type: none
    depends_on:
      - api
    # volumes:
    #   - ./local-dev/api-data-watcher-pusher:/home
  local-minio:
    image: minio/minio
    labels:
      lagoon.type: none
    entrypoint: sh
    command: -c 'mkdir -p /export/lagoon-files && mkdir -p /export/harbor-images && minio server /export --console-address ":9001" '
    ports:
      - '9000:9000'
      - '9001:9001'
    environment:
      - MINIO_ACCESS_KEY=minio
      - MINIO_SECRET_KEY=minio123
  broker:
    image: uselagoon/broker-single
    labels:
      lagoon.type: none
    restart: on-failure
    ports:
      - '15672:15672'
      - '5672:5672'
    networks:
      - amazeeio-network
  insights-handler:
    image: uselagoon/insights-handler:main
    labels:
      lagoon.type: none
    entrypoint: sh
    command: -c './insights-handler -rabbitmq-username=guest -rabbitmq-password=guest -rabbitmq-hostname=broker -s3-host=http://local-minio:9000 -s3-bucket=lagoon-files -s3-usessl=false -lagoon-api-host=http://api:3000/graphql -jwt-token-signing-key=super-secret-string --debug'
    networks:
      - amazeeio-network
      - default

networks:
  amazeeio-network:
    external: true
